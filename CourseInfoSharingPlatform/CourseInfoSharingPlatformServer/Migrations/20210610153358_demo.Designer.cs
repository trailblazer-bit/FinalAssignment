// <auto-generated />
using System;
using CourseInfoSharingPlatformServer.Dao;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseInfoSharingPlatformServer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210610153358_demo")]
    partial class demo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.Admin", b =>
                {
                    b.Property<string>("AdminName")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("AdminName");

                    b.ToTable("ADMIN");
                });

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.CUS", b =>
                {
                    b.Property<string>("CUSId")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("CourseId")
                        .HasColumnType("longtext");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("CUSId");

                    b.ToTable("COURSE_USER_SCORE");
                });

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsReported")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LikeNum")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedQuestionQuestionId")
                        .HasColumnType("int");

                    b.Property<string>("RelatedUserUserName")
                        .HasColumnType("varchar(95)");

                    b.HasKey("CommentId");

                    b.HasIndex("RelatedQuestionQuestionId");

                    b.HasIndex("RelatedUserUserName");

                    b.ToTable("COMMENT");
                });

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("BookName")
                        .HasColumnType("longtext");

                    b.Property<string>("Department")
                        .HasColumnType("longtext");

                    b.Property<string>("Introduction")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("TeacherName")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("CourseId");

                    b.ToTable("COURSE");
                });

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsReported")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LikeNum")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<string>("RelatedCourseCourseId")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("RelatedUserUserName")
                        .HasColumnType("varchar(95)");

                    b.HasKey("QuestionId");

                    b.HasIndex("RelatedCourseCourseId");

                    b.HasIndex("RelatedUserUserName");

                    b.ToTable("QUESTION");
                });

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .HasColumnType("longtext");

                    b.Property<int>("LikeNum")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedQuestionQuestionId")
                        .HasColumnType("int");

                    b.HasKey("TagId");

                    b.HasIndex("RelatedQuestionQuestionId");

                    b.ToTable("TAG");
                });

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("Introduction")
                        .HasColumnType("longtext");

                    b.Property<string>("Major")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("UserName");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.Property<string>("LikeCoursesCourseId")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("UserWhoLikedCourseUserName")
                        .HasColumnType("varchar(95)");

                    b.HasKey("LikeCoursesCourseId", "UserWhoLikedCourseUserName");

                    b.HasIndex("UserWhoLikedCourseUserName");

                    b.ToTable("CourseUser");
                });

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.Comment", b =>
                {
                    b.HasOne("CourseInfoSharingPlatformServer.Models.Question", "RelatedQuestion")
                        .WithMany()
                        .HasForeignKey("RelatedQuestionQuestionId");

                    b.HasOne("CourseInfoSharingPlatformServer.Models.User", "RelatedUser")
                        .WithMany()
                        .HasForeignKey("RelatedUserUserName");

                    b.Navigation("RelatedQuestion");

                    b.Navigation("RelatedUser");
                });

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.Question", b =>
                {
                    b.HasOne("CourseInfoSharingPlatformServer.Models.Course", "RelatedCourse")
                        .WithMany("QuestionList")
                        .HasForeignKey("RelatedCourseCourseId");

                    b.HasOne("CourseInfoSharingPlatformServer.Models.User", "RelatedUser")
                        .WithMany()
                        .HasForeignKey("RelatedUserUserName");

                    b.Navigation("RelatedCourse");

                    b.Navigation("RelatedUser");
                });

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.Tag", b =>
                {
                    b.HasOne("CourseInfoSharingPlatformServer.Models.Question", "RelatedQuestion")
                        .WithMany("QuestionTags")
                        .HasForeignKey("RelatedQuestionQuestionId");

                    b.Navigation("RelatedQuestion");
                });

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.HasOne("CourseInfoSharingPlatformServer.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("LikeCoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseInfoSharingPlatformServer.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserWhoLikedCourseUserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.Course", b =>
                {
                    b.Navigation("QuestionList");
                });

            modelBuilder.Entity("CourseInfoSharingPlatformServer.Models.Question", b =>
                {
                    b.Navigation("QuestionTags");
                });
#pragma warning restore 612, 618
        }
    }
}
